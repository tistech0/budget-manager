name: CI/CD - Main Branch

on:
  push:
    branches:
      - main

jobs:
  frontend-checks:
    name: Frontend - Lint, Type-Check, Test & Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run unit tests
        run: npm run test:unit

      - name: Build production bundle
        run: npm run build

  backend-checks:
    name: Backend - Test, Verify & Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Run tests
        run: ./mvnw test

      - name: Run Maven verify
        run: ./mvnw verify -DskipTests

      - name: Build package
        run: ./mvnw clean package -DskipTests

  docker-build-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [frontend-checks, backend-checks]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            tistech0/budget-manager-frontend:latest
            tistech0/budget-manager-frontend:sha-${{ steps.vars.outputs.sha_short }}
          cache-from: type=registry,ref=tistech0/budget-manager-frontend:latest
          cache-to: type=inline

      - name: Setup Java 21 for Backend build
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build Backend JAR
        working-directory: ./backend
        run: ./mvnw clean package -DskipTests

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            tistech0/budget-manager-backend:latest
            tistech0/budget-manager-backend:sha-${{ steps.vars.outputs.sha_short }}
          cache-from: type=registry,ref=tistech0/budget-manager-backend:latest
          cache-to: type=inline

      - name: Image digest
        run: |
          echo "Frontend image pushed: tistech0/budget-manager-frontend:latest"
          echo "Frontend image pushed: tistech0/budget-manager-frontend:sha-${{ steps.vars.outputs.sha_short }}"
          echo "Backend image pushed: tistech0/budget-manager-backend:latest"
          echo "Backend image pushed: tistech0/budget-manager-backend:sha-${{ steps.vars.outputs.sha_short }}"
